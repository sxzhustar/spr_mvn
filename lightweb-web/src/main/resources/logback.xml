<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<!-- 属性 -->
	<property name="logDir" value="../../log"></property>
	
	<!-- 
	%c 输出日志信息所属的类的全名
	%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd HH:mm:ss }，输出类似：2002-10-18- 22：10：28
	%f 输出日志信息所属的类的类名
	%l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行
	%m 输出代码中指定的信息，如log(message)中的message
	%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”
	%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推
	%r 输出自应用启动到输出该日志信息所耗费的毫秒数
	%t 输出产生该日志事件的线程名
	 -->
	<!-- 控制台输出 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d [%t] %-5p [%c] - %m%n</pattern>
		</encoder>
	</appender>
	<!-- 文件日志输出 -->
	<appender name="commonFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>log.txt</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${logDir}/log-common-%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
			<!-- each file should be at most 50MB, keep 60 days worth of history, but at most 200M -->
			<maxFileSize>50MB</maxFileSize>
			<maxHistory>30</maxHistory>
			<totalSizeCap>200MB</totalSizeCap>
		</rollingPolicy>
		<encoder>%msg%n</encoder>
	</appender>
	<appender name="sqlFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <prudent>true</prudent>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${logDir}/log-sql-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>200MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d [%t] %-5p [%c] - %m%n</pattern>
        </encoder>
    </appender>
	
	<!-- 日志级别 -->
	<root>
		<level value="debug"></level>
		<appender-ref ref="console"/>
		<appender-ref ref="commonFile"/>
		<appender-ref ref="sqlFile"/>
	</root>
</configuration>